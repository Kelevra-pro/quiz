{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","containers/QuizList/QuizList.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","containers/Auth/Auth.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","console","log","match","params","QuizWrapper","QuizList","renderQuizzes","Auth","QuizCreator","App","path","component","Boolean","location","hostname","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99565f1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3_iLS\",\"close\":\"Drawer_close__1XXn3\",\"active\":\"Drawer_active__1Tebi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1CLC8\",\"open\":\"MenuToggle_open__3zE6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1yyGu\",\"QuizWrapper\":\"Quiz_QuizWrapper__1631-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__cMHbV\",\"Question\":\"ActiveQuiz_Question__1CS_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__q6Vmd\",\"success\":\"AnswerItem_success__3SYnL\",\"error\":\"AnswerItem_error__1lmVV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__12ppt\",\"success\":\"FinishedQuiz_success__2u_Nv\",\"error\":\"FinishedQuiz_error__1bTkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3wdF-\",\"success\":\"Button_success__3ecR4\",\"error\":\"Button_error__3XYfa\",\"primary\":\"Button_primary__15iUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__14J9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2N8jL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2h5yS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__1IGXz\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.scss'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ];\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n};\r\n\r\nexport default MenuToggle\r\n","import React from 'react'\r\nimport classes from './Backdrop.module.scss'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}/>;\r\n\r\nexport default Backdrop\r\n","import React, {Component} from 'react'\r\nimport classes from './Drawer.module.scss'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\n\r\nconst links = [\r\n    {to: '/', label: 'Список', exact: true},\r\n    {to: '/auth', label: 'Авторизация', exact: false},\r\n    {to: '/quiz-creator', label: 'Создать тест', exact: false}\r\n];\r\n\r\nclass Drawer extends Component {\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    };\r\n\r\n    renderLinks() {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer];\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer\r\n","import React, {Component} from 'react'\r\nimport classes from './Layout.module.scss'\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\"\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menu: false\r\n    };\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    };\r\n\r\n    menuCloseHandler = () => {\r\n      this.setState({\r\n          menu: false\r\n      })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport classes from './AnswerItem.module.scss'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem];\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (\r\n        <li className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default AnswerItem\r\n","import React from 'react'\r\nimport classes from './AnswersList.module.scss'\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => {\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            {props.answers.map((answer, index) => {\r\n                return (\r\n                    <AnswerItem\r\n                        key={index}\r\n                        answer={answer}\r\n                        onAnswerClick={props.onAnswerClick}\r\n                        state={props.state ? props.state[answer.id] : null}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default AnswersList\r\n","import React from 'react'\r\nimport classes from './ActiveQuiz.module.scss'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n\r\n            <AnswersList\r\n                state={props.state}\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ActiveQuiz\r\n","import React from 'react'\r\nimport classes from './Button.module.scss'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ];\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport classes from './FinishedQuiz.module.scss'\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0);\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                        const cls = [\r\n                            'fa',\r\n                            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                            classes[props.results[quizItem.id]]\r\n                        ];\r\n\r\n                        return (\r\n                            <li\r\n                                key={index}\r\n                            >\r\n                                <strong>{index + 1}</strong>.&nbsp;\r\n                                {quizItem.question}\r\n                                <i className={cls.join(' ')}/>\r\n                            </li>\r\n                        )\r\n                    }\r\n                )}\r\n\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to=\"/\">\r\n                    <Button onClick={props.onRetry} type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FinishedQuiz\r\n","import React, {Component} from 'react'\r\nimport classes from './Quiz.module.scss'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        results: {}, // {[id]: success error}\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null, // { [id]: 'success' 'error' }\r\n        quiz: [\r\n            {\r\n                question: 'Какой транспорт лишний?',\r\n                rightAnswerId: 3,\r\n                id: 1,\r\n                answers: [\r\n                    {text: 'Автомобиль', id: 1},\r\n                    {text: 'Фургон', id: 2},\r\n                    {text: 'Самолет', id: 3},\r\n                    {text: 'Грузовик', id: 4}\r\n                ]\r\n            },\r\n            {\r\n                question: 'Какой предмет лишний?',\r\n                rightAnswerId: 1,\r\n                id: 2,\r\n                answers: [\r\n                    {text: 'Кеды', id: 1},\r\n                    {text: 'Пуловер', id: 2},\r\n                    {text: 'Рубашка', id: 3},\r\n                    {text: 'Футболка', id: 4}\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n    onAnswerClickHandler = answerId => {\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if (this.state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = this.state.quiz[this.state.activeQuestion];\r\n        const results = this.state.results;\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = 'success'\r\n            }\r\n            this.setState({\r\n                answerState: {[answerId]: 'success'},\r\n                results\r\n            });\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (this.isQuizFinished()) {\r\n                    this.setState({\r\n                        isFinished: true\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null\r\n                    })\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000);\r\n\r\n        } else {\r\n            results[question.id] = 'error';\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'},\r\n                results\r\n            })\r\n        }\r\n    };\r\n\r\n    isQuizFinished() {\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length\r\n    }\r\n\r\n    retryHandler = () => {\r\n      this.setState({\r\n          activeQuestion: 0,\r\n          answerState: null,\r\n          isFinished: false,\r\n          results: {}\r\n      })\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log('Quiz ID', this.props.match.params.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.state.isFinished\r\n                            ? <FinishedQuiz\r\n                                results={this.state.results}\r\n                                quiz={this.state.quiz}\r\n                                onRetry={this.retryHandler}\r\n                            />\r\n                            : <ActiveQuiz\r\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                                question={this.state.quiz[this.state.activeQuestion].question}\r\n                                onAnswerClick={this.onAnswerClickHandler}\r\n                                quizLength={this.state.quiz.length}\r\n                                answerNumber={this.state.activeQuestion + 1}\r\n                                state={this.state.answerState}\r\n                            />\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n","import React, {Component} from 'react'\r\nimport classes from './QuizList.module.scss'\r\n// import index from \"postcss-normalize\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport default class QuizList extends Component {\r\n\r\n    renderQuizzes() {\r\n        return [1, 2, 3].map((quiz, index) => {\r\n            return (\r\n                <li\r\n                key={index}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz} >\r\n                        Тест {quiz}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    <ul>\r\n                        {this.renderQuizzes()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nexport default class Auth extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Auth</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nexport default class QuizCreator extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>QuizCreator</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport Layout from './hoc/Layout/Layout'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport Quiz from \"./containers/Quiz/Quiz\"\r\nimport QuizList from \"./containers/QuizList/QuizList\"\r\nimport Auth from \"./containers/Auth/Auth\"\r\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\"\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Switch>\r\n                    <Route path=\"/auth\" component={Auth}/>\r\n                    <Route path=\"/quiz-creator\" component={QuizCreator}/>\r\n                    <Route path=\"/quiz/:id\" component={Quiz}/>\r\n                    <Route path=\"/\" component={QuizList}/>\r\n                </Switch>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}