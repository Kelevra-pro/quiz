{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","containers/QuizList/QuizList.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizzes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validateForm","hasOwnProperty","Select","options","option","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","validate","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,mBCAzFD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,mBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,mBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,mBCA5GD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,MAAQ,8B,mBCApHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,MAAQ,sBAAsB,QAAU,0B,mBCA5HD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,gBAAgB,8BAA8B,gBAAgB,8BAA8B,gBAAgB,8BAA8B,OAAS,yB,mBCArMD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,mBCAzDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,mBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,kNCuBZC,EArBI,SAAAC,GACf,IAAMC,EAAM,CACRC,IAAQH,WACR,MAUJ,OAPIC,EAAMG,QACNF,EAAIG,KAAK,YACTH,EAAIG,KAAKF,IAAQG,OAEjBJ,EAAIG,KAAK,WAIT,uBACIE,UAAWL,EAAIM,KAAK,KACpBC,QAASR,EAAMS,Y,0CCdZC,EAFE,SAAAV,GAAK,OAAI,yBAAKM,UAAWJ,IAAQQ,SAAUF,QAASR,EAAMQ,WCuD5DG,E,2MAnDbC,aAAe,WACb,EAAKZ,MAAMa,W,2EAGAC,GAAQ,IAAD,OAClB,OAAOA,EAAMC,KAAI,SAACC,EAAMC,GACtB,OACE,wBAAIC,IAAKD,GACP,kBAAC,IAAD,CACEE,GAAIH,EAAKG,GACTC,MAAOJ,EAAKI,MACZC,gBAAiBnB,IAAQoB,OACzBd,QAAS,EAAKI,cAEbI,EAAKO,a,+BAQd,IAAMtB,EAAM,CAACC,IAAQS,QAChBa,KAAKxB,MAAMG,QACdF,EAAIG,KAAKF,IAAQuB,OAGnB,IAAMX,EAAQ,CACZ,CAAEK,GAAI,IAAKI,MAAO,uCAAUH,OAAO,IAUrC,OAPII,KAAKxB,MAAM0B,iBACbZ,EAAMV,KAAK,CAAEe,GAAI,gBAAiBI,MAAO,sEAAgBH,OAAO,IAChEN,EAAMV,KAAK,CAAEe,GAAI,UAAWI,MAAO,iCAASH,OAAO,KAEnDN,EAAMV,KAAK,CAAEe,GAAI,QAASI,MAAO,qEAAeH,OAAO,IAIvD,oCACE,yBAAKd,UAAWL,EAAIM,KAAK,MACvB,4BACGiB,KAAKG,YAAYb,KAGrBU,KAAKxB,MAAMG,OAAS,kBAAC,EAAD,CAAUK,QAASgB,KAAKxB,MAAMa,UAAa,U,GA/CnDe,a,OCCfC,E,2MACJC,MAAQ,CACNC,MAAM,G,EAGRC,kBAAoB,WAClB,EAAKC,SAAS,CACZF,MAAO,EAAKD,MAAMC,Q,EAItBG,iBAAmB,WACjB,EAAKD,SAAS,CACZF,MAAM,K,wEAKR,OACE,yBAAKzB,UAAWJ,IAAQ2B,QAEtB,kBAAC,EAAD,CACE1B,OAAQqB,KAAKM,MAAMC,KACnBlB,QAASW,KAAKU,iBACdR,gBAAiBF,KAAKxB,MAAM0B,kBAG9B,kBAAC,EAAD,CACEjB,SAAUe,KAAKQ,kBACf7B,OAAQqB,KAAKM,MAAMC,OAGrB,8BACGP,KAAKxB,MAAMmC,e,GAjCDP,aA8CNQ,mBANf,SAA0BN,GACxB,MAAO,CACLJ,kBAAmBI,EAAMO,KAAKC,SAInBF,CAAyBP,G,4EClCzBU,EAfI,SAAAvC,GACf,IAAMC,EAAM,CAACC,IAAQqC,YAMrB,OAJIvC,EAAM8B,OACN7B,EAAIG,KAAKF,IAAQF,EAAM8B,QAIvB,wBAAIxB,UAAWL,EAAIM,KAAK,KACpBC,QAAS,kBAAMR,EAAMwC,cAAcxC,EAAMyC,OAAOC,MAC/C1C,EAAMyC,OAAOE,OCQXC,EAjBK,SAAA5C,GAChB,OACI,wBAAIM,UAAWJ,IAAQ0C,aAClB5C,EAAM6C,QAAQ9B,KAAI,SAAC0B,EAAQxB,GACxB,OACI,kBAAC,EAAD,CACIC,IAAKD,EACLwB,OAAQA,EACRD,cAAexC,EAAMwC,cACrBV,MAAO9B,EAAM8B,MAAQ9B,EAAM8B,MAAMW,EAAOC,IAAM,YCYvDI,EArBI,SAAA9C,GACf,OACI,yBAAKM,UAAWJ,IAAQ4C,YACpB,uBAAGxC,UAAWJ,IAAQ6C,UACtB,8BACI,gCAAS/C,EAAMgD,aAAf,KADJ,OAEKhD,EAAMiD,UAGP,+BAAQjD,EAAMgD,aAAd,iBAAgChD,EAAMkD,aAG1C,kBAAC,EAAD,CACIpB,MAAO9B,EAAM8B,MACbe,QAAS7C,EAAM6C,QACfL,cAAexC,EAAMwC,kB,kCCCtBW,EAjBA,SAAAnD,GACX,IAAMC,EAAM,CACRC,IAAQiD,OACRjD,IAAQF,EAAMoD,OAGlB,OACI,4BACI5C,QAASR,EAAMQ,QACfF,UAAWL,EAAIM,KAAK,KACpB8C,SAAUrD,EAAMqD,UAEfrD,EAAMmC,WCkCJmB,EA3CM,SAAAtD,GACjB,IAAMuD,EAAeC,OAAOC,KAAKzD,EAAM0D,SAASC,QAAO,SAACC,EAAO1C,GAI3D,MAH2B,YAAvBlB,EAAM0D,QAAQxC,IACd0C,IAEGA,IACR,GAEH,OACI,yBAAKtD,UAAWJ,IAAQoD,cACpB,4BACKtD,EAAM6D,KAAK9C,KAAI,SAAC+C,EAAU7C,GACnB,IAAMhB,EAAM,CACR,KAC+B,UAA/BD,EAAM0D,QAAQI,EAASpB,IAAkB,WAAa,WACtDxC,IAAQF,EAAM0D,QAAQI,EAASpB,MAGnC,OACI,wBACIxB,IAAKD,GAEL,gCAASA,EAAQ,GAHrB,QAIK6C,EAASb,SACV,uBAAG3C,UAAWL,EAAIM,KAAK,YAQ3C,qFAAcgD,EAAd,iBAAgCvD,EAAM6D,KAAKE,QAC3C,6BACI,kBAAC,EAAD,CAAQvD,QAASR,EAAMgE,QAASZ,KAAK,WAArC,0DACA,kBAAC,IAAD,CAAMjC,GAAG,KACL,kBAAC,EAAD,CAAQX,QAASR,EAAMgE,QAASZ,KAAK,WAArC,mI,iBC5BLa,EAXA,SAAAjE,GAAK,OAChB,yBAAKM,UAAWJ,IAAQgE,QACpB,yBAAK5D,UAAWJ,IAAQ+D,QACpB,8BACA,8BACA,8BACA,iC,iDCPGE,OAAMC,OAAO,CACxBC,QAAS,6CCHAC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAqB,qBAErBC,GAAiB,iBACjBC,GAAc,cACdC,GAAqB,qBACrBC,GAAa,aAEbC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAe,eACfC,GAAc,cCsCpB,SAASC,GAAiBrB,GAC7B,MAAO,CACHT,KAAMqB,GACNZ,QAID,SAASsB,KACZ,MAAO,CACH/B,KAAMkB,IAIP,SAASc,GAAmBC,GAC/B,MAAO,CACHjC,KAAMmB,GACNc,UAID,SAASC,GAAiBC,GAC7B,MAAO,CACHnC,KAAMoB,GACNgB,MAAOD,GAIR,SAASE,GAAaC,EAAahC,GACtC,MAAO,CACHN,KAAMsB,GACNgB,cAAahC,WAuBd,SAASiC,GAAgBC,GAC5B,OAAO,SAACC,EAAUC,GACd,IAAMhE,EAAQgE,IAAWjC,KAEzB,GAAI/B,EAAM4D,YAAa,CACnB,IAAMxE,EAAMsC,OAAOC,KAAK3B,EAAM4D,aAAa,GAC3C,GAA+B,YAA3B5D,EAAM4D,YAAYxE,GAClB,OAIR,IAAM+B,EAAWnB,EAAM+B,KAAK/B,EAAMiE,gBAC5BrC,EAAU5B,EAAM4B,QAEtB,GAAIT,EAAS+C,gBAAkBJ,EAAU,CAChClC,EAAQT,EAASP,MAClBgB,EAAQT,EAASP,IAAM,WAG3BmD,EAASJ,GAAa,eAAEG,EAAW,WAAYlC,IAG/C,IAAMuC,EAAUC,OAAOC,YAAW,WAnCvC,IAA0BC,GAmDjC,SAAwBtE,GACpB,OAAOA,EAAMiE,eAAiB,IAAMjE,EAAM+B,KAAKE,OAhB/BsC,CAAevE,GAGf+D,GAvCaO,EAuCatE,EAAMiE,eAAiB,EAtC1D,CACH3C,KAAMwB,GACNwB,YAkCYP,EA1CT,CACHzC,KAAMuB,KA6CEuB,OAAOI,aAAaL,KACrB,UAGHvC,EAAQT,EAASP,IAAM,QACvBmD,EAASJ,GAAa,eAAEG,EAAW,SAAUlC,K,IClInD6C,G,4LAGE/E,KAAKxB,MAAMwG,cAAchF,KAAKxB,MAAMyG,MAAMC,OAAOhE,M,6CAIjDlB,KAAKxB,MAAM2G,c,+BAIX,OACI,yBAAKrG,UAAWJ,IAAQqG,MACpB,yBAAKjG,UAAWJ,IAAQ0G,aACpB,2JAGIpF,KAAKxB,MAAM6G,UAAYrF,KAAKxB,MAAM6D,KAC5B,kBAAC,EAAD,MACArC,KAAKxB,MAAM8G,WACX,kBAAC,EAAD,CACEpD,QAASlC,KAAKxB,MAAM0D,QACpBG,KAAMrC,KAAKxB,MAAM6D,KACjBG,QAASxC,KAAKxB,MAAM2G,YAEtB,kBAAC,EAAD,CACE9D,QAASrB,KAAKxB,MAAM6D,KAAKrC,KAAKxB,MAAM+F,gBAAgBlD,QACpDI,SAAUzB,KAAKxB,MAAM6D,KAAKrC,KAAKxB,MAAM+F,gBAAgB9C,SACrDT,cAAehB,KAAKxB,MAAM2F,gBAC1BzC,WAAY1B,KAAKxB,MAAM6D,KAAKE,OAC5Bf,aAAcxB,KAAKxB,MAAM+F,eAAiB,EAC1CjE,MAAON,KAAKxB,MAAM0F,oB,GA/B/B9D,aA4DJQ,oBAnBf,SAAyBN,GACrB,MAAO,CACH4B,QAAS5B,EAAM+B,KAAKH,QACpBoD,WAAYhF,EAAM+B,KAAKiD,WACvBf,eAAgBjE,EAAM+B,KAAKkC,eAC3BL,YAAa5D,EAAM+B,KAAK6B,YACxB7B,KAAM/B,EAAM+B,KAAKA,KACjBgD,QAAS/E,EAAM+B,KAAKgD,YAI5B,SAA4BhB,GACxB,MAAO,CACHW,cAAe,SAAA9D,GAAE,OAAImD,GDzBCkB,ECyBsBrE,EDxBhD,uCAAO,WAAMmD,GAAN,iBAAAmB,EAAA,6DACHnB,EAASV,MADN,kBAIwBhB,GAAM8C,IAAN,kBAAqBF,EAArB,UAJxB,OAIOG,EAJP,OAKOrD,EAAOqD,EAASC,KAEtBtB,EAASX,GAAiBrB,IAP3B,gDASCgC,EAASP,GAAiB,EAAD,KAT1B,yDAAP,mDAAM,KADH,IAAuByB,GC0BtBpB,gBAAiB,SAAAC,GAAQ,OAAIC,EAASF,GAAgBC,KACtDe,UAAW,kBAAMd,EDoCd,CACHzC,KAAMyB,SCjCCzC,CAA6CmE,I,oBC5DtDa,G,wLAGE,OAAO5F,KAAKxB,MAAMqF,OAAOtE,KAAI,SAAA8C,GACzB,OACI,wBACI3C,IAAK2C,EAAKnB,IAEV,kBAAC,IAAD,CAASvB,GAAI,SAAW0C,EAAKnB,IACxBmB,EAAKwD,Y,0CAQtB7F,KAAKxB,MAAMsH,gB,+BAIX,OACI,yBAAKhH,UAAWJ,KAAQkH,UACpB,6BACI,yGAEI5F,KAAKxB,MAAM6G,SAAwC,IAA7BrF,KAAKxB,MAAMqF,OAAOtB,OAClC,kBAAC,EAAD,MACA,4BACGvC,KAAK+F,uB,GA7Bf3F,aAmDRQ,oBAbf,SAAyBN,GACrB,MAAO,CACHuD,OAAQvD,EAAM+B,KAAKwB,OACnBwB,QAAS/E,EAAM+B,KAAKgD,YAI5B,SAA4BhB,GACxB,MAAO,CACHyB,YAAa,kBAAMzB,EF5CpB,WAAwB,IAAD,OAC1B,8CAAO,WAAMA,GAAN,iBAAAmB,EAAA,6DACHnB,EAASV,MADN,kBAGwBhB,GAAM8C,IAAI,gBAHlC,OAGOC,EAHP,OAKO7B,EAAS,GAEf7B,OAAOC,KAAKyD,EAASC,MAAMK,SAAQ,SAACtG,EAAKD,GACrCoE,EAAOjF,KAAK,CACRsC,GAAIxB,EACJmG,KAAK,kCAAD,OAAWpG,EAAQ,QAI/B4E,EAAST,GAAmBC,IAC5B,EAAKpD,SAAS,CACVoD,SAAQwB,SAAS,IAhBtB,kDAoBChB,EAASP,GAAiB,EAAD,KApB1B,0DAAP,mDAAM,GE2C0BgC,QAIrBlF,CAA6CgF,I,4DCxD5D,SAASK,GAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAChC,OAAQF,GAASC,GAAWC,EAGhC,IA8BeC,GA9BD,SAAA7H,GACV,IAAM8H,EAAY9H,EAAMoD,MAAQ,OAC1BnD,EAAM,CAACC,KAAQ2H,OACfE,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMrC,OAJIR,GAAUzH,IACVC,EAAIG,KAAKF,KAAQgI,SAIjB,yBAAK5H,UAAWL,EAAIM,KAAK,MACrB,2BAAOwH,QAASA,GAAU/H,EAAMuB,OAC5B,2BACI6B,KAAM0E,EACNpF,GAAIqF,EACJI,MAAOnI,EAAMmI,MACbC,SAAUpI,EAAMoI,WAIpBX,GAAUzH,GACR,8BAAOA,EAAMqI,cAAgB,oIAC7B,OCCX,SAASC,GAAYC,GAC1B,OAAO,SAAA1C,GACLM,YAAW,WACTN,EAAS2C,QACD,IAAPD,IAKA,SAASC,KAId,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxBD,aAAaC,WAAW,kBACjB,CACLtF,KAAM6B,IAqBH,SAAS0D,GAAarG,GAC3B,MAAO,CACLc,KAAM4B,GACN1C,S,ilBC5DEsG,G,2MAEJ9G,MAAQ,CACN+G,aAAa,EACbC,aAAc,CACZC,MAAO,CACLZ,MAAO,GACP/E,KAAM,QACN7B,MAAO,QACP8G,aAAc,gHACdX,OAAO,EACPC,SAAS,EACTqB,WAAY,CACVC,UAAU,EACVF,OAAO,IAGXG,SAAU,CACRf,MAAO,GACP/E,KAAM,WACN7B,MAAO,uCACP8G,aAAc,+IACdX,OAAO,EACPC,SAAS,EACTqB,WAAY,CACVC,UAAU,EACVE,UAAW,M,EAMnBC,aAAe,WACb,EAAKpJ,MAAMqC,KACT,EAAKP,MAAMgH,aAAaC,MAAMZ,MAC9B,EAAKrG,MAAMgH,aAAaI,SAASf,OACjC,I,EAIJkB,gBAAkB,WAChB,EAAKrJ,MAAMqC,KACT,EAAKP,MAAMgH,aAAaC,MAAMZ,MAC9B,EAAKrG,MAAMgH,aAAaI,SAASf,OACjC,I,EAIJmB,cAAgB,SAAAC,GACdA,EAAMC,kB,EAyBRC,gBAAkB,SAACF,EAAOG,GACxB,IAAMZ,EAAY,MAAQ,EAAKhH,MAAMgH,cAC/Ba,EAAO,MAAQb,EAAaY,IAElCC,EAAQxB,MAAQoB,EAAMK,OAAOzB,MAC7BwB,EAAQhC,SAAU,EAClBgC,EAAQjC,MAAQ,EAAKmC,gBAAgBF,EAAQxB,MAAOwB,EAAQX,YAE5DF,EAAaY,GAAeC,EAE5B,IAAId,GAAc,EAElBrF,OAAOC,KAAKqF,GAActB,SAAQ,SAAAH,GAChCwB,EAAcC,EAAazB,GAAMK,OAASmB,KAG5C,EAAK5G,SAAS,CACZ6G,eAAcD,iB,+EAvCDV,EAAOa,GACtB,IAAKA,EACH,OAAO,EAGT,IAAIc,GAAU,EAcd,OAZId,EAAWC,WACba,EAA2B,KAAjB3B,EAAM4B,QAAiBD,GAG/Bd,EAAWD,QACbe,EAAUE,KAAGjB,MAAMZ,IAAU2B,GAG3Bd,EAAWG,YACbW,EAAU3B,EAAMpE,QAAUiF,EAAWG,WAAaW,GAG7CA,I,qCAwBQ,IAAD,OACd,OAAOtG,OAAOC,KAAKjC,KAAKM,MAAMgH,cAAc/H,KAAI,SAAC2I,EAAazI,GAC5D,IAAM0I,EAAU,EAAK7H,MAAMgH,aAAaY,GACxC,OACE,kBAAC,GAAD,CACExI,IAAKwI,EAAczI,EACnBmC,KAAMuG,EAAQvG,KACd+E,MAAOwB,EAAQxB,MACfT,MAAOiC,EAAQjC,MACfC,QAASgC,EAAQhC,QACjBpG,MAAOoI,EAAQpI,MACfqG,iBAAkB+B,EAAQX,WAC1BX,aAAcsB,EAAQtB,aACtBD,SAAU,SAAAmB,GAAK,OAAI,EAAKE,gBAAgBF,EAAOG,W,+BAOrD,OACE,yBAAKpJ,UAAWJ,KAAQ0I,MACtB,6BACE,kGAEA,0BACEqB,SAAUzI,KAAK8H,cACfhJ,UAAWJ,KAAQgK,UAElB1I,KAAK2I,eAEN,kBAAC,EAAD,CACE/G,KAAK,UACL5C,QAASgB,KAAK4H,aACd/F,UAAW7B,KAAKM,MAAM+G,aAHxB,kCAOA,kBAAC,EAAD,CACEzF,KAAK,UACL5C,QAASgB,KAAK6H,gBACdhG,UAAW7B,KAAKM,MAAM+G,aAHxB,uH,GArIOjH,aAyJJQ,mBAAQ,MANvB,SAA6ByD,GAC3B,MAAO,CACLxD,KAAM,SAAC0G,EAAOG,EAAUkB,GAAlB,OAA8BvE,ED1JjC,SAAekD,EAAOG,EAAUkB,GACrC,8CAAO,WAAMvE,GAAN,uBAAAmB,EAAA,6DACCqD,EAAW,CACftB,QAAOG,WACPoB,mBAAmB,GAGjBC,EAAM,wGAENH,IACFG,EAAM,qHATH,SAYkBpG,IAAMqG,KAAKD,EAAKF,GAZlC,OAYCnD,EAZD,OAaCC,EAAOD,EAASC,KAEhBsD,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAA6B,IAAjBxD,EAAKyD,WAE5DnC,aAAaoC,QAAQ,QAAS1D,EAAK2D,SACnCrC,aAAaoC,QAAQ,SAAU1D,EAAK4D,SACpCtC,aAAaoC,QAAQ,iBAAkBJ,GAEvC5E,EAAS8C,GAAYxB,EAAK2D,UAC1BjF,EAASyC,GAAWnB,EAAKyD,YAtBpB,4CAAP,mDAAM,GCyJyCvI,CAAK0G,EAAOG,EAAUkB,QAIxDhI,CAAkCwG,I,+NCjK1C,SAASoC,GAAcC,EAAQjC,GAClC,O,2WAAO,IACAiC,EADP,CAEIjC,aACAtB,OAAQsB,EACRrB,SAAS,EACTQ,MAAO,KAiBR,SAAS+C,GAAapC,GACzB,IAAID,GAAc,EAElB,IAAK,IAAIc,KAAWb,EACZA,EAAaqC,eAAexB,KAC5Bd,EAAcC,EAAaa,GAASjC,OAASmB,GAIrD,OAAOA,E,4CCFIuC,GA3BA,SAAApL,GACX,IAAM+H,EAAO,UAAM/H,EAAMuB,MAAZ,YAAqByG,KAAKC,UAEvC,OACI,yBAAK3H,UAAWJ,KAAQkL,QACpB,2BAAOrD,QAASA,GAAU/H,EAAMuB,OAChC,4BACImB,GAAIqF,EACJI,MAAOnI,EAAMmI,MACbC,SAAUpI,EAAMoI,UAEfpI,EAAMqL,QAAQtK,KAAI,SAACuK,EAAQrK,GACxB,OACI,4BACIkH,MAAOmD,EAAOnD,MACdjH,IAAKoK,EAAOnD,MAAQlH,GAEnBqK,EAAO3I,YClBrB4I,GAFG,SAAAvL,GAAK,OAAIA,EAAMmC,U,6kBCUjC,SAASqJ,GAAoBpF,GACzB,OAAO4E,GAAc,CACjBzJ,MAAM,8CAAD,OAAa6E,GAClBiC,aAAc,6JACd3F,GAAI0D,GACL,CAAC6C,UAAU,IAGlB,SAASwC,KACL,MAAO,CACHxI,SAAU+H,GAAc,CACpBzJ,MAAO,kFACP8G,aAAc,kJACf,CAACY,UAAU,IACdyC,QAASF,GAAoB,GAC7BG,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,I,IAI/BM,G,2MAEFhK,MAAQ,CACJ+B,KAAM,GACNgF,aAAa,EACb7C,cAAe,EACf8C,aAAc2C,M,EAGlBnC,cAAgB,SAAAC,GACZA,EAAMC,kB,EAGVuC,mBAAqB,SAAAxC,GACjBA,EAAMC,iBADoB,MAG6B,EAAK1H,MAAMgH,aAA3D7F,EAHmB,EAGnBA,SAAUyI,EAHS,EAGTA,QAASC,EAHA,EAGAA,QAASC,EAHT,EAGSA,QAASC,EAHlB,EAGkBA,QAEtCG,EAAe,CACjB/I,SAAUA,EAASkF,MACnBzF,GAAI,EAAK1C,MAAM6D,KAAKE,OAAS,EAC7BiC,cAAe,EAAKlE,MAAMkE,cAC1BnD,QAAS,CACL,CAACF,KAAM+I,EAAQvD,MAAOzF,GAAIgJ,EAAQhJ,IAClC,CAACC,KAAMgJ,EAAQxD,MAAOzF,GAAIiJ,EAAQjJ,IAClC,CAACC,KAAMiJ,EAAQzD,MAAOzF,GAAIkJ,EAAQlJ,IAClC,CAACC,KAAMkJ,EAAQ1D,MAAOzF,GAAImJ,EAAQnJ,MAI1C,EAAK1C,MAAMiM,mBAAmBD,GAE9B,EAAK/J,SAAS,CACV4G,aAAa,EACb7C,cAAe,EACf8C,aAAc2C,Q,EAItBS,kBAAoB,SAAA3C,GAChBA,EAAMC,iBAEN,EAAKvH,SAAS,CACV4G,aAAa,EACb7C,cAAe,EACf8C,aAAc2C,OAElB,EAAKzL,MAAMmM,oB,EAGfC,cAAgB,SAACjE,EAAOuB,GACpB,IAAMZ,EAAY,MAAO,EAAKhH,MAAMgH,cAC9Ba,EAAO,MAAOb,EAAaY,IAEjCC,EAAQhC,SAAU,EAClBgC,EAAQxB,MAAQA,EAChBwB,EAAQjC,MH7ET,SAAkBS,GAA2B,IAApBa,EAAmB,uDAAN,KACzC,IAAKA,EACD,OAAO,EAGX,IAAIc,GAAU,EAKd,OAJId,EAAWC,WACXa,EAA2B,KAAjB3B,EAAM4B,QAAiBD,GAG9BA,EGmEauC,CAAS1C,EAAQxB,MAAOwB,EAAQX,YAEhDF,EAAaY,GAAeC,EAE5B,EAAK1H,SAAS,CACV6G,eACAD,YAAaqC,GAAapC,M,EAyBlCwD,oBAAsB,SAAA/C,GAClB,EAAKtH,SAAS,CACV+D,eAAgBuD,EAAMK,OAAOzB,S,gFAvBnB,IAAD,OACb,OAAO3E,OAAOC,KAAKjC,KAAKM,MAAMgH,cAAc/H,KAAI,SAAC2I,EAAazI,GAC1D,IAAM0I,EAAU,EAAK7H,MAAMgH,aAAaY,GAExC,OACI,kBAAC,GAAD,CAAWxI,IAAKwI,EAAczI,GAC1B,kBAAC,GAAD,CACIM,MAAOoI,EAAQpI,MACf4G,MAAOwB,EAAQxB,MACfT,MAAOiC,EAAQjC,MACfE,iBAAkB+B,EAAQX,WAC1BrB,QAASgC,EAAQhC,QACjBU,aAAcsB,EAAQtB,aACtBD,SAAU,SAAAmB,GAAK,OAAI,EAAK6C,cAAc7C,EAAMK,OAAOzB,MAAOuB,MAEnD,IAAVzI,EAAc,6BAAQ,W,+BAcnC,IAAMsL,EAAS,kBAAC,GAAD,CACXhL,MAAM,+IACN4G,MAAO3G,KAAKM,MAAMkE,cAClBoC,SAAU5G,KAAK8K,oBACfjB,QAAS,CACL,CAAC1I,KAAM,EAAGwF,MAAO,GACjB,CAACxF,KAAM,EAAGwF,MAAO,GACjB,CAACxF,KAAM,EAAGwF,MAAO,GACjB,CAACxF,KAAM,EAAGwF,MAAO,MAIzB,OACI,yBAAK7H,UAAWJ,KAAQ4L,aACpB,6BACI,+GAEA,0BAAM7B,SAAUzI,KAAK8H,eAEhB9H,KAAKgL,iBAELD,EAED,kBAAC,EAAD,CACInJ,KAAK,UACL5C,QAASgB,KAAKuK,mBACd1I,UAAW7B,KAAKM,MAAM+G,aAH1B,yFAQA,kBAAC,EAAD,CACIzF,KAAK,UACL5C,QAASgB,KAAK0K,kBACd7I,SAAqC,IAA3B7B,KAAKxB,MAAM6D,KAAKE,QAH9B,8E,GA9HEnC,aA0JXQ,oBAbf,SAAyBN,GACrB,MAAO,CACH+B,KAAM/B,EAAMsC,OAAOP,SAI3B,SAA4BgC,GACxB,MAAO,CACHoG,mBAAoB,SAAAQ,GAAI,OAAI5G,ECjL7B,SAA4B4G,GAC/B,MAAO,CACHrJ,KAAM0B,GACN2H,QD8KqCR,CAAmBQ,KACxDN,iBAAkB,kBAAMtG,ECpK5B,uCAAO,WAAOA,EAAUC,GAAjB,SAAAkB,EAAA,sEACG7C,GAAMqG,KAAK,eAAgB1E,IAAW1B,OAAOP,MADhD,OAEHgC,EARG,CACHzC,KAAM2B,KAKH,2CAAP,qDAAM,QDwKK3C,CAA6C0J,IEpLtDY,G,4LAEFlL,KAAKxB,MAAMwI,W,+BAIX,OAAO,kBAAC,IAAD,CAAUrH,GAAI,U,GANJS,aAgBNQ,mBAAQ,MANvB,SAA6ByD,GAC3B,MAAO,CACL2C,OAAQ,kBAAM3C,EAAS2C,UAIZpG,CAAkCsK,ICV3CC,G,4LAGFnL,KAAKxB,MAAM4M,c,+BAKX,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWnE,KAC/B,kBAAC,IAAD,CAAOkE,KAAK,YAAYC,UAAWxG,KACnC,kBAAC,IAAD,CAAOuG,KAAK,IAAIC,UAAW3F,KAC3B,kBAAC,IAAD,CAAUjG,GAAI,OAgBlB,OAZIK,KAAKxB,MAAM0B,kBACbmL,EACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBAAgBC,UAAWjB,KACvC,kBAAC,IAAD,CAAOgB,KAAK,YAAYC,UAAWxG,KACnC,kBAAC,IAAD,CAAOuG,KAAK,UAAUC,UAAWL,KACjC,kBAAC,IAAD,CAAOI,KAAK,IAAI1L,OAAK,EAAC2L,UAAW3F,KACjC,kBAAC,IAAD,CAAUjG,GAAI,QAMlB,kBAAC,EAAD,KACG0L,O,GA/BSjL,aAiDHoL,mBAAW5K,aAZ1B,SAA0BN,GACxB,MAAO,CACLJ,kBAAmBI,EAAMO,KAAKC,UAIlC,SAA6BuD,GAC3B,MAAO,CACL+G,UAAW,kBAAM/G,GRPZ,SAAAA,GACL,IAAMvD,EAAQmG,aAAawE,QAAQ,SACnC,GAAK3K,EAEE,CACL,IAAMmI,EAAiB,IAAIC,KAAKjC,aAAawE,QAAQ,mBACjDxC,GAAkB,IAAIC,KACxB7E,EAAS2C,OAET3C,EAAS8C,GAAYrG,IACrBuD,EAASyC,IAAYmC,EAAeE,WAAY,IAAID,MAAOC,WAAa,YAP1E9E,EAAS2C,aQQWpG,CAA6CuK,KChDnDO,QACW,cAA7BhH,OAAOiH,SAASC,UAEe,UAA7BlH,OAAOiH,SAASC,UAEhBlH,OAAOiH,SAASC,SAAS3G,MACvB,2D,0lBChBN,IAAM4G,GAAe,CACnB/K,MAAO,M,6kBCQT,IAAM+K,GAAe,CACjBhI,OAAQ,GACRwB,SAAS,EACTrB,MAAO,KACP9B,QAAS,GACToD,YAAY,EACZf,eAAgB,EAChBL,YAAa,KACb7B,KAAM,M,0lBCjBV,IAAMwJ,GAAe,CACjBxJ,KAAM,ICEKyJ,oBAAgB,CAC7BjL,KHAa,WAAqD,IAA/BP,EAA8B,uDAAtBuL,GAAcE,EAAQ,uCACjE,OAAQA,EAAOnK,MACb,KAAK4B,GACH,OAAO,MACFlD,EADL,CACYQ,MAAOiL,EAAOjL,QAE5B,KAAK2C,GACH,OAAO,MACFnD,EADL,CACYQ,MAAO,OAErB,QACE,OAAOR,IGVX+B,KFea,WAAoD,IAA/B/B,EAA8B,uDAAtBuL,GAAcE,EAAQ,uCAC9D,OAAQA,EAAOnK,MACX,KAAKkB,GACD,OAAO,MACAxC,EADP,CACc+E,SAAS,IAE3B,KAAKtC,GACD,OAAO,MACAzC,EADP,CACc+E,SAAS,EAAOxB,OAAQkI,EAAOlI,SAEjD,KAAKb,GACD,OAAO,MACA1C,EADP,CACc+E,SAAS,EAAOrB,MAAO+H,EAAO/H,QAEhD,KAAKf,GACD,OAAO,MACA3C,EADP,CACc+E,SAAS,EAAOhD,KAAM0J,EAAO1J,OAE/C,KAAKa,GACD,OAAO,MACA5C,EADP,CACc4D,YAAa6H,EAAO7H,YAAahC,QAAS6J,EAAO7J,UAEnE,KAAKiB,GACD,OAAO,MACA7C,EADP,CACcgF,YAAY,IAE9B,KAAKlC,GACD,OAAO,MACA9C,EADP,CACc4D,YAAa,KAAMK,eAAgBwH,EAAOnH,SAE5D,KAAKvB,GACD,OAAO,MACA/C,EADP,CAEIiE,eAAgB,EAChBL,YAAa,KACboB,YAAY,EACZpD,QAAS,KAEjB,QACI,OAAO5B,IErDjBsC,ODFa,WAAsD,IAA/BtC,EAA8B,uDAAtBuL,GAAcE,EAAQ,uCAChE,OAAQA,EAAOnK,MACX,KAAK0B,GACD,OAAO,MACAhD,EADP,CAEI+B,KAAK,GAAD,oBAAM/B,EAAM+B,MAAZ,CAAkB0J,EAAOd,SAErC,KAAK1H,GACD,OAAO,MACAjD,EADP,CACc+B,KAAM,KAExB,QACI,OAAO/B,M,SEPb0L,GACgB,kBAAXtH,QACPA,OAAOuH,qCACHvH,OAAOuH,qCAAqC,IAC1CC,KAEJC,GAAQC,aACVC,GACAL,GACIM,aAAgBC,QAIlBC,GACF,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAKZM,IAASC,OAAOF,GAAKG,SAASC,eAAe,SLiGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e1ded465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\",\"active\":\"Drawer_active__2oACK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2OH8k\",\"Question\":\"ActiveQuiz_Question__3-k9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__uovHA\",\"success\":\"AnswerItem_success__XCXzE\",\"error\":\"AnswerItem_error__2qb2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2aARn\",\"success\":\"FinishedQuiz_success__2EeEd\",\"error\":\"FinishedQuiz_error__2PlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"success\":\"Button_success__qdwm8\",\"error\":\"Button_error__A4xET\",\"primary\":\"Button_primary__CVuDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__1t2tG\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__31c93\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__1Ab_8\",\"center\":\"Loader_center__3DNW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"AuthForm\":\"Auth_AuthForm__2fbR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1ulOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","import React from 'react'\nimport classes from './MenuToggle.module.scss'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ];\n\n    if (props.isOpen) {\n        cls.push('fa-times');\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n};\n\nexport default MenuToggle\n","import React from 'react'\nimport classes from './Backdrop.module.scss'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}/>;\n\nexport default Backdrop\n","import React, { Component } from 'react';\nimport classes from './Drawer.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nclass Drawer extends Component {\n\n  clickHandler = () => {\n    this.props.onClose();\n  };\n\n  renderLinks (links) {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            activeClassName={classes.active}\n            onClick={this.clickHandler}\n          >\n            {link.label}\n          </NavLink>\n        </li>\n      );\n    });\n  }\n\n  render () {\n    const cls = [classes.Drawer];\n    if (!this.props.isOpen) {\n      cls.push(classes.close);\n    }\n\n    const links = [\n      { to: '/', label: 'Список', exact: true }\n    ];\n\n    if (this.props.isAuthenticated) {\n      links.push({ to: '/quiz-creator', label: 'Создать тест', exact: false });\n      links.push({ to: '/logout', label: 'Выйти', exact: false });\n    } else {\n      links.push({ to: '/auth', label: 'Авторизация', exact: false });\n    }\n\n    return (\n      <>\n        <nav className={cls.join(' ')}>\n          <ul>\n            {this.renderLinks(links)}\n          </ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\n      </>\n    );\n  }\n}\n\nexport default Drawer;\n","import React, { Component } from 'react';\nimport classes from './Layout.module.scss';\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\nimport { connect } from 'react-redux';\n\nclass Layout extends Component {\n  state = {\n    menu: false\n  };\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu\n    });\n  };\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false\n    });\n  };\n\n  render () {\n    return (\n      <div className={classes.Layout}>\n\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.menuCloseHandler}\n          isAuthenticated={this.props.isAuthenticated}\n        />\n\n        <MenuToggle\n          onToggle={this.toggleMenuHandler}\n          isOpen={this.state.menu}\n        />\n\n        <main>\n          {this.props.children}\n        </main>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  };\n}\n\nexport default connect(mapStateToProps)(Layout);\n","import React from 'react'\nimport classes from './AnswerItem.module.scss'\n\nconst AnswerItem = props => {\n    const cls = [classes.AnswerItem];\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}>\n            {props.answer.text}\n        </li>\n    )\n};\n\nexport default AnswerItem\n","import React from 'react'\nimport classes from './AnswersList.module.scss'\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = props => {\n    return (\n        <ul className={classes.AnswersList}>\n            {props.answers.map((answer, index) => {\n                return (\n                    <AnswerItem\n                        key={index}\n                        answer={answer}\n                        onAnswerClick={props.onAnswerClick}\n                        state={props.state ? props.state[answer.id] : null}\n                    />\n                )\n            })}\n        </ul>\n    );\n};\n\nexport default AnswersList\n","import React from 'react'\nimport classes from './ActiveQuiz.module.scss'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => {\n    return (\n        <div className={classes.ActiveQuiz}>\n            <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n\n                <small>{props.answerNumber} из {props.quizLength}</small>\n            </p>\n\n            <AnswersList\n                state={props.state}\n                answers={props.answers}\n                onAnswerClick={props.onAnswerClick}\n            />\n        </div>\n    )\n};\n\nexport default ActiveQuiz\n","import React from 'react'\nimport classes from './Button.module.scss'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ];\n\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n};\n\nexport default Button\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport classes from './FinishedQuiz.module.scss'\nimport Button from \"../UI/Button/Button\";\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++\n        }\n        return total\n    }, 0);\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                        const cls = [\n                            'fa',\n                            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                            classes[props.results[quizItem.id]]\n                        ];\n\n                        return (\n                            <li\n                                key={index}\n                            >\n                                <strong>{index + 1}</strong>.&nbsp;\n                                {quizItem.question}\n                                <i className={cls.join(' ')}/>\n                            </li>\n                        )\n                    }\n                )}\n\n            </ul>\n\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n            <div>\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n                <Link to=\"/\">\n                    <Button onClick={props.onRetry} type=\"success\">Перейти в список тестов</Button>\n                </Link>\n            </div>\n        </div>\n    )\n};\n\nexport default FinishedQuiz\n","import React from 'react'\nimport classes from './Loader.module.scss'\n\nconst Loader = props => (\n    <div className={classes.center}>\n        <div className={classes.Loader}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    </div>\n);\n\nexport default Loader\n","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-8d2a4.firebaseio.com/'\n})\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\n\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\n\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import axios from '../../axios/axios-quiz'\nimport {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS,\n    FINISH_QUIZ,\n    QUIZ_NEXT_QUESTION, QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"./actionTypes\";\n\nexport function fetchQuizes() {\n    return async dispatch => {\n        dispatch(fetchQuizesStart());\n        try {\n            const response = await axios.get('/quizes.json');\n\n            const quizes = [];\n\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест №${index + 1}`\n                })\n            });\n\n            dispatch(fetchQuizesSuccess(quizes));\n            this.setState({\n                quizes, loading: false\n            })\n\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizById(quizId) {\n    return async dispatch => {\n        dispatch(fetchQuizesStart());\n\n        try {\n            const response = await axios.get(`/quizes/${quizId}.json`);\n            const quiz = response.data;\n\n            dispatch(fetchQuizSuccess(quiz))\n        } catch (e) {\n            dispatch(fetchQuizesError(e))\n        }\n    }\n}\n\nexport function fetchQuizSuccess(quiz) {\n    return {\n        type: FETCH_QUIZ_SUCCESS,\n        quiz\n    }\n}\n\nexport function fetchQuizesStart() {\n    return {\n        type: FETCH_QUIZES_START\n    }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n    return {\n        type: FETCH_QUIZES_SUCCESS,\n        quizes\n    }\n}\n\nexport function fetchQuizesError(e) {\n    return {\n        type: FETCH_QUIZES_ERROR,\n        error: e\n    }\n}\n\nexport function quizSetState(answerState, results) {\n    return {\n        type: QUIZ_SET_STATE,\n        answerState, results\n    }\n}\n\nexport function finishQuiz() {\n    return {\n        type: FINISH_QUIZ\n    }\n}\n\nexport function quizNextQuestion(number) {\n    return {\n        type: QUIZ_NEXT_QUESTION,\n        number\n    }\n}\n\nexport function retryQuiz() {\n    return {\n        type: QUIZ_RETRY\n    }\n}\n\nexport function quizAnswerClick(answerId) {\n    return (dispatch, getState) => {\n        const state = getState().quiz;\n\n        if (state.answerState) {\n            const key = Object.keys(state.answerState)[0];\n            if (state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = state.quiz[state.activeQuestion];\n        const results = state.results;\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            dispatch(quizSetState({[answerId]: 'success'}, results));\n\n\n            const timeout = window.setTimeout(() => {\n                if (isQuizFinished(state)) {\n                    dispatch(finishQuiz())\n                } else {\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\n                }\n                window.clearTimeout(timeout)\n            }, 1000);\n\n        } else {\n            results[question.id] = 'error';\n            dispatch(quizSetState({[answerId]: 'error'}, results))\n        }\n    }\n}\n\nfunction isQuizFinished(state) {\n    return state.activeQuestion + 1 === state.quiz.length\n}","import React, {Component} from 'react'\nimport classes from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport {connect} from 'react-redux';\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from \"../../store/actions/quiz\";\n\nclass Quiz extends Component {\n\n    componentDidMount() {\n        this.props.fetchQuizById(this.props.match.params.id)\n    };\n\n    componentWillUnmount() {\n        this.props.retryQuiz()\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы</h1>\n\n                    {\n                        this.props.loading || !this.props.quiz\n                            ? <Loader/>\n                            : this.props.isFinished\n                            ? <FinishedQuiz\n                                results={this.props.results}\n                                quiz={this.props.quiz}\n                                onRetry={this.props.retryQuiz}\n                            />\n                            : <ActiveQuiz\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\n                                question={this.props.quiz[this.props.activeQuestion].question}\n                                onAnswerClick={this.props.quizAnswerClick}\n                                quizLength={this.props.quiz.length}\n                                answerNumber={this.props.activeQuestion + 1}\n                                state={this.props.answerState}\n                            />\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        results: state.quiz.results,\n        isFinished: state.quiz.isFinished,\n        activeQuestion: state.quiz.activeQuestion,\n        answerState: state.quiz.answerState,\n        quiz: state.quiz.quiz,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n        retryQuiz: () => dispatch(retryQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n","import React, {Component} from 'react';\nimport classes from './QuizList.module.scss';\nimport {NavLink} from 'react-router-dom';\nimport Loader from '../../components/UI/Loader/Loader';\nimport {connect} from 'react-redux';\nimport {fetchQuizes} from \"../../store/actions/quiz\";\n\n\nclass QuizList extends Component {\n\n    renderQuizzes() {\n        return this.props.quizes.map(quiz => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    componentDidMount() {\n        this.props.fetchQuizes()\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов</h1>\n                    {\n                        this.props.loading && this.props.quizes.length !== 0\n                            ? <Loader/>\n                            : <ul>\n                                {this.renderQuizzes()}\n                            </ul>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","import React from 'react'\nimport classes from './Input.module.scss'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n    return !valid && touched && shouldValidate\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text';\n    const cls = [classes.Input];\n    const htmlFor = `${inputType}-${Math.random()}`;\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n                <input\n                    type={inputType}\n                    id={htmlFor}\n                    value={props.value}\n                    onChange={props.onChange}\n                />\n\n            {\n                isInvalid(props)\n                ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n                : null \n            }\n\n\n        </div>\n    )\n};\n\nexport default Input\n","import axios from 'axios';\nimport { AUTH_LOGOUT, AUTH_SUCCESS } from './actionTypes';\n\nexport function auth (email, password, isLogin) {\n  return async dispatch => {\n    const authData = {\n      email, password,\n      returnSecureToken: true\n    };\n\n    let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCvxuFWQ93099gBd9LQyvOOKWbAyztA4E8';\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCvxuFWQ93099gBd9LQyvOOKWbAyztA4E8';\n    }\n\n    const response = await axios.post(url, authData);\n    const data = response.data;\n\n    const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n\n    localStorage.setItem('token', data.idToken);\n    localStorage.setItem('userId', data.localId);\n    localStorage.setItem('expirationDate', expirationDate);\n\n    dispatch(authSuccess(data.idToken));\n    dispatch(autoLogout(data.expiresIn));\n  };\n}\n\nexport function autoLogout (time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000\n    );\n  };\n}\n\nexport function logout () {\n  localStorage.removeItem('token');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: AUTH_LOGOUT\n  };\n}\n\nexport function autoLogin () {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n}\n\nexport function authSuccess (token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  };\n}","import React, { Component } from 'react';\nimport is from 'is_js';\nimport classes from './Auth.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { connect } from 'react-redux';\nimport { auth } from '../../store/actions/auth';\n\nclass Auth extends Component {\n\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true\n        }\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6\n        }\n      }\n    }\n  };\n\n  loginHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      true\n    );\n  };\n\n  registerHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      false\n    );\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n  };\n\n  validateControl (value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  };\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.value = event.target.value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validation);\n\n    formControls[controlName] = control;\n\n    let isFormValid = true;\n\n    Object.keys(formControls).forEach(name => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n\n    this.setState({\n      formControls, isFormValid\n    });\n  };\n\n  renderInputs () {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={event => this.onChangeHandler(event, controlName)}\n        />\n      );\n    });\n  }\n\n  render () {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form\n            onSubmit={this.submitHandler}\n            className={classes.AuthForm}\n          >\n            {this.renderInputs()}\n\n            <Button\n              type=\"success\"\n              onClick={this.loginHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Войти\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={this.registerHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Зарегистрироваться\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n\n    let isValid = true;\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true;\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n\n    return isFormValid\n}\n","import React from 'react'\nimport classes from './Select.module.scss'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`;\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n\n            </select>\n        </div>\n    )\n};\n\nexport default Select\n","const Auxiliary = props => props.children\n\nexport default Auxiliary\n","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\nimport {createQuizQuestion, finishCreateQuiz} from \"../../store/actions/create\";\nimport {createControl, validate, validateForm} from '../../form/formFramework'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nclass QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    };\n\n    submitHandler = event => {\n        event.preventDefault()\n    };\n\n    addQuestionHandler = event => {\n        event.preventDefault();\n\n        const {question, option1, option2, option3, option4} = this.state.formControls;\n\n        const questionItem = {\n            question: question.value,\n            id: this.props.quiz.length + 1,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id}\n            ]\n        };\n\n        this.props.createQuizQuestion(questionItem);\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n    };\n\n    createQuizHandler = event => {\n        event.preventDefault();\n\n        this.setState({\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        });\n        this.props.finishCreateQuiz()\n    };\n\n    changeHandler = (value, controlName) => {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.touched = true;\n        control.value = value;\n        control.valid = validate(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        })\n    };\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    };\n\n    render() {\n\n        const select = <Select\n            label='Выберите правильный ответ'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 1, value: 1},\n                {text: 2, value: 2},\n                {text: 3, value: 3},\n                {text: 4, value: 4}\n            ]}\n        />;\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>Создание теста</h1>\n\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n                        {select}\n\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled={this.props.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quiz: state.create.quiz\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\nimport axios from \"../../axios/axios-quiz\";\n\nexport function createQuizQuestion(item) {\n    return {\n        type: CREATE_QUIZ_QUESTION,\n        item\n    }\n}\n\nexport function resetQuizCreation() {\n    return {\n        type: RESET_QUIZ_CREATION\n    }\n}\n\nexport function finishCreateQuiz() {\n    return async (dispatch, getState) => {\n        await axios.post('/quizes.json', getState().create.quiz);\n        dispatch(resetQuizCreation())\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../store/actions/auth';\nimport { Redirect} from 'react-router-dom';\n\nclass Logout extends Component {\n  componentDidMount () {\n    this.props.logout()\n  }\n\n  render () {\n    return <Redirect to={'/'}/>\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    logout: () => dispatch(logout())\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz';\nimport QuizList from './containers/QuizList/QuizList';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport { connect } from 'react-redux';\nimport Logout from './components/Logout/Logout';\nimport { autoLogin } from './store/actions/auth';\n\nclass App extends Component {\n\n  componentDidMount () {\n    this.props.autoLogin();\n  }\n\n  render () {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth}/>\n        <Route path=\"/quiz/:id\" component={Quiz}/>\n        <Route path=\"/\" component={QuizList}/>\n        <Redirect to={'/'}/>\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator}/>\n          <Route path=\"/quiz/:id\" component={Quiz}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/\" exact component={QuizList}/>\n          <Redirect to={'/'}/>\n        </Switch>\n      );\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  };\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from '../actions/actionTypes';\n\nconst initialState = {\n  token: null\n};\n\nexport default function authReducer (state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state, token: action.token\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state, token: null\n      };\n    default:\n      return state;\n  }\n}","import {\n    FETCH_QUIZ_SUCCESS,\n    FETCH_QUIZES_ERROR,\n    FETCH_QUIZES_START,\n    FETCH_QUIZES_SUCCESS,\n    FINISH_QUIZ,\n    QUIZ_NEXT_QUESTION,\n    QUIZ_RETRY,\n    QUIZ_SET_STATE\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quizes: [],\n    loading: false,\n    error: null,\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null,\n    quiz: null\n};\n\nexport default function quizReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_QUIZES_START:\n            return {\n                ...state, loading: true\n            };\n        case FETCH_QUIZES_SUCCESS:\n            return {\n                ...state, loading: false, quizes: action.quizes\n            };\n        case FETCH_QUIZES_ERROR:\n            return {\n                ...state, loading: false, error: action.error\n            };\n        case FETCH_QUIZ_SUCCESS:\n            return {\n                ...state, loading: false, quiz: action.quiz\n            };\n        case QUIZ_SET_STATE:\n            return {\n                ...state, answerState: action.answerState, results: action.results\n            };\n        case FINISH_QUIZ:\n            return {\n                ...state, isFinished: true\n            };\n        case QUIZ_NEXT_QUESTION:\n            return {\n                ...state, answerState: null, activeQuestion: action.number\n            };\n        case QUIZ_RETRY:\n            return {\n                ...state,\n                activeQuestion: 0,\n                answerState: null,\n                isFinished: false,\n                results: {}\n            };\n        default:\n            return state;\n    }\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\n\nconst initialState = {\n    quiz: []\n};\n\nexport default function createReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_QUIZ_QUESTION:\n            return {\n                ...state,\n                quiz: [...state.quiz, action.item]\n            };\n        case RESET_QUIZ_CREATION:\n            return {\n                ...state, quiz: []\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport quizReducer from './quiz';\nimport createReducer from './create';\n\nexport default combineReducers({\n  auth: authReducer,\n  quiz: quizReducer,\n  create: createReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}