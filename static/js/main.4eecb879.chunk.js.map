{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","containers/QuizList/QuizList.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","axios","create","baseURL","Loader","center","Quiz","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","match","params","response","data","console","log","QuizWrapper","QuizList","quizes","name","forEach","renderQuizzes","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","a","authData","returnSecureToken","post","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","Select","options","option","createControl","config","validateForm","hasOwnProperty","Auxiliary","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","validate","selectChangeHandler","select","renderControls","App","path","component","Boolean","location","hostname","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4eecb879.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\",\"active\":\"Drawer_active__2oACK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2OH8k\",\"Question\":\"ActiveQuiz_Question__3-k9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__uovHA\",\"success\":\"AnswerItem_success__XCXzE\",\"error\":\"AnswerItem_error__2qb2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2aARn\",\"success\":\"FinishedQuiz_success__2EeEd\",\"error\":\"FinishedQuiz_error__2PlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"success\":\"Button_success__qdwm8\",\"error\":\"Button_error__A4xET\",\"primary\":\"Button_primary__CVuDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__1t2tG\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__31c93\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__1Ab_8\",\"center\":\"Loader_center__3DNW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"AuthForm\":\"Auth_AuthForm__2fbR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1ulOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","import React from 'react'\nimport classes from './MenuToggle.module.scss'\n\nconst MenuToggle = props => {\n    const cls = [\n        classes.MenuToggle,\n        'fa'\n    ];\n\n    if (props.isOpen) {\n        cls.push('fa-times');\n        cls.push(classes.open)\n    } else {\n        cls.push('fa-bars')\n    }\n\n    return (\n        <i\n            className={cls.join(' ')}\n            onClick={props.onToggle}\n        />\n    )\n};\n\nexport default MenuToggle\n","import React from 'react'\nimport classes from './Backdrop.module.scss'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}/>;\n\nexport default Backdrop\n","import React, {Component} from 'react'\nimport classes from './Drawer.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst links = [\n    {to: '/', label: 'Список', exact: true},\n    {to: '/auth', label: 'Авторизация', exact: false},\n    {to: '/quiz-creator', label: 'Создать тест', exact: false}\n];\n\nclass Drawer extends Component {\n\n    clickHandler = () => {\n        this.props.onClose()\n    };\n\n    renderLinks() {\n        return links.map((link, index) => {\n            return (\n                <li key={index}>\n                    <NavLink\n                        to={link.to}\n                        exact={link.exact}\n                        activeClassName={classes.active}\n                        onClick={this.clickHandler}\n                    >\n                        {link.label}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const cls = [classes.Drawer];\n        if (!this.props.isOpen) {\n            cls.push(classes.close)\n        }\n\n        return (\n            <>\n                <nav className={cls.join(' ')}>\n                    <ul>\n                        {this.renderLinks()}\n                    </ul>\n                </nav>\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\n            </>\n        )\n    }\n}\n\nexport default Drawer\n","import React, {Component} from 'react'\nimport classes from './Layout.module.scss'\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\"\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\n\nclass Layout extends Component {\n    state = {\n        menu: false\n    };\n\n    toggleMenuHandler = () => {\n        this.setState({\n            menu: !this.state.menu\n        })\n    };\n\n    menuCloseHandler = () => {\n      this.setState({\n          menu: false\n      })\n    };\n\n    render() {\n        return (\n            <div className={classes.Layout}>\n\n                <Drawer\n                    isOpen={this.state.menu}\n                    onClose={this.menuCloseHandler}\n                />\n\n                <MenuToggle\n                    onToggle={this.toggleMenuHandler}\n                    isOpen={this.state.menu}\n                />\n\n                <main>\n                    {this.props.children}\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default Layout\n","import React from 'react'\nimport classes from './AnswerItem.module.scss'\n\nconst AnswerItem = props => {\n    const cls = [classes.AnswerItem];\n\n    if (props.state) {\n        cls.push(classes[props.state])\n    }\n\n    return (\n        <li className={cls.join(' ')}\n            onClick={() => props.onAnswerClick(props.answer.id)}>\n            {props.answer.text}\n        </li>\n    )\n};\n\nexport default AnswerItem\n","import React from 'react'\nimport classes from './AnswersList.module.scss'\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = props => {\n    return (\n        <ul className={classes.AnswersList}>\n            {props.answers.map((answer, index) => {\n                return (\n                    <AnswerItem\n                        key={index}\n                        answer={answer}\n                        onAnswerClick={props.onAnswerClick}\n                        state={props.state ? props.state[answer.id] : null}\n                    />\n                )\n            })}\n        </ul>\n    );\n};\n\nexport default AnswersList\n","import React from 'react'\nimport classes from './ActiveQuiz.module.scss'\nimport AnswersList from \"./AnswersList/AnswersList\";\n\nconst ActiveQuiz = props => {\n    return (\n        <div className={classes.ActiveQuiz}>\n            <p className={classes.Question}>\n            <span>\n                <strong>{props.answerNumber}.</strong>&nbsp;\n                {props.question}\n            </span>\n\n                <small>{props.answerNumber} из {props.quizLength}</small>\n            </p>\n\n            <AnswersList\n                state={props.state}\n                answers={props.answers}\n                onAnswerClick={props.onAnswerClick}\n            />\n        </div>\n    )\n};\n\nexport default ActiveQuiz\n","import React from 'react'\nimport classes from './Button.module.scss'\n\nconst Button = props => {\n    const cls = [\n        classes.Button,\n        classes[props.type]\n    ];\n\n    return (\n        <button\n            onClick={props.onClick}\n            className={cls.join(' ')}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    )\n};\n\nexport default Button\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport classes from './FinishedQuiz.module.scss'\nimport Button from \"../UI/Button/Button\";\n\nconst FinishedQuiz = props => {\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++\n        }\n        return total\n    }, 0);\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                        const cls = [\n                            'fa',\n                            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                            classes[props.results[quizItem.id]]\n                        ];\n\n                        return (\n                            <li\n                                key={index}\n                            >\n                                <strong>{index + 1}</strong>.&nbsp;\n                                {quizItem.question}\n                                <i className={cls.join(' ')}/>\n                            </li>\n                        )\n                    }\n                )}\n\n            </ul>\n\n            <p>Правильно {successCount} из {props.quiz.length}</p>\n            <div>\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n                <Link to=\"/\">\n                    <Button onClick={props.onRetry} type=\"success\">Перейти в список тестов</Button>\n                </Link>\n            </div>\n        </div>\n    )\n};\n\nexport default FinishedQuiz\n","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://react-quiz-8d2a4.firebaseio.com/'\n})\n","import React from 'react'\nimport classes from './Loader.module.scss'\n\nconst Loader = props => (\n    <div className={classes.center}>\n        <div className={classes.Loader}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    </div>\n);\n\nexport default Loader\n","import React, {Component} from 'react'\nimport classes from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nclass Quiz extends Component {\n    state = {\n        results: {},\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,\n        quiz: [],\n        loading: true\n    };\n\n    onAnswerClickHandler = answerId => {\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0];\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion];\n        const results = this.state.results;\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n            this.setState({\n                answerState: {[answerId]: 'success'},\n                results\n            });\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n                window.clearTimeout(timeout)\n            }, 1000);\n\n        } else {\n            results[question.id] = 'error';\n            this.setState({\n                answerState: {[answerId]: 'error'},\n                results\n            })\n        }\n    };\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            activeQuestion: 0,\n            answerState: null,\n            isFinished: false,\n            results: {}\n        })\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get(`/quizes/${this.props.match.params.id}.json`);\n            const quiz = response.data;\n\n            this.setState({\n                quiz,\n                loading: false\n            })\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы</h1>\n\n                    {\n                        this.state.loading\n                            ? <Loader/>\n                            : this.state.isFinished\n                            ? <FinishedQuiz\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                                onRetry={this.retryHandler}\n                            />\n                            : <ActiveQuiz\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\n                                question={this.state.quiz[this.state.activeQuestion].question}\n                                onAnswerClick={this.onAnswerClickHandler}\n                                quizLength={this.state.quiz.length}\n                                answerNumber={this.state.activeQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Quiz\n","import React, {Component} from 'react'\nimport classes from './QuizList.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport Loader from '../../components/UI/Loader/Loader'\nimport axios from '../../axios/axios-quiz'\n\n\nexport default class QuizList extends Component {\n\n    state = {\n        quizes: [],\n        loading: true\n    };\n\n    renderQuizzes() {\n        return this.state.quizes.map(quiz => {\n            return (\n                <li\n                    key={quiz.id}\n                >\n                    <NavLink to={'/quiz/' + quiz.id}>\n                        {quiz.name}\n                    </NavLink>\n                </li>\n            )\n        })\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get('/quizes.json');\n\n            const quizes = [];\n\n            Object.keys(response.data).forEach((key, index) => {\n                quizes.push({\n                    id: key,\n                    name: `Тест №${index + 1}`\n                })\n            });\n\n            this.setState({\n                quizes, loading: false\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizList}>\n                <div>\n                    <h1>Список тестов</h1>\n\n                    {\n                        this.state.loading\n                            ? <Loader/>\n                            : <ul>\n                                {this.renderQuizzes()}\n                            </ul>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport classes from './Input.module.scss'\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n    return !valid && touched && shouldValidate\n}\n\nconst Input = props => {\n    const inputType = props.type || 'text';\n    const cls = [classes.Input];\n    const htmlFor = `${inputType}-${Math.random()}`;\n\n    if (isInvalid(props)) {\n        cls.push(classes.invalid)\n    }\n\n    return (\n        <div className={cls.join(' ')}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n                <input\n                    type={inputType}\n                    id={htmlFor}\n                    value={props.value}\n                    onChange={props.onChange}\n                />\n\n            {\n                isInvalid(props)\n                ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n                : null \n            }\n\n\n        </div>\n    )\n};\n\nexport default Input\n","import React, {Component} from 'react'\nimport is from 'is_js'\nimport classes from './Auth.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport axios from 'axios'\n\nexport default class Auth extends Component {\n\n    state = {\n        isFormValid: false,\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите корректный email',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введите корректный пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    };\n\n    loginHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true\n        };\n        try {\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCvxuFWQ93099gBd9LQyvOOKWbAyztA4E8', authData);\n            console.log(response.data)\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    registerHandler = async () => {\n        const authData = {\n            email: this.state.formControls.email.value,\n            password: this.state.formControls.password.value,\n            returnSecureToken: true\n        };\n        try {\n            const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCvxuFWQ93099gBd9LQyvOOKWbAyztA4E8', authData);\n            console.log(response.data)\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    submitHandler = event => {\n        event.preventDefault()\n    };\n\n    validateControl(value, validation) {\n        if (!validation) {\n            return true\n        }\n\n        let isValid = true;\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if (validation.email) {\n            isValid = is.email(value) && isValid\n        }\n\n        if (validation.minLength) {\n            isValid = value.length >= validation.minLength && isValid\n        }\n\n        return isValid\n    };\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.value = event.target.value;\n        control.touched = true;\n        control.valid = this.validateControl(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        let isFormValid = true;\n\n        Object.keys(formControls).forEach(name => {\n            isFormValid = formControls[name].valid && isFormValid\n        });\n\n        this.setState({\n            formControls, isFormValid\n        })\n    };\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    value={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={event => this.onChangeHandler(event, controlName)}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизация</h1>\n\n                    <form\n                        onSubmit={this.submitHandler}\n                        className={classes.AuthForm}\n                    >\n                        {this.renderInputs()}\n\n                        <Button\n                            type=\"success\"\n                            onClick={this.loginHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Войти\n                        </Button>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.registerHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Зарегистрироваться\n                        </Button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport classes from './Select.module.scss'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`;\n\n    return (\n        <div className={classes.Select}>\n            <label htmlFor={htmlFor}>{props.label}</label>\n            <select\n                id={htmlFor}\n                value={props.value}\n                onChange={props.onChange}\n            >\n                {props.options.map((option, index) => {\n                    return (\n                        <option\n                            value={option.value}\n                            key={option.value + index}\n                        >\n                            {option.text}\n                        </option>\n                    )\n                })}\n\n            </select>\n        </div>\n    )\n};\n\nexport default Select\n","export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n\n    let isValid = true;\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true;\n\n    for (let control in formControls) {\n        if (formControls.hasOwnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid\n        }\n    }\n\n    return isFormValid\n}\n","const Auxiliary = props => props.children\n\nexport default Auxiliary\n","import React, {Component} from 'react'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport {createControl, validate, validateForm} from '../../form/formFramework'\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\nimport axios from '../../axios/axios-quiz'\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMessage: 'Значение не может быть пустым',\n        id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMessage: 'Вопрос не может быть пустым'\n        }, {required: true}),\n        option1: createOptionControl(1),\n        option2: createOptionControl(2),\n        option3: createOptionControl(3),\n        option4: createOptionControl(4),\n    }\n}\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n    };\n\n    submitHandler = event => {\n        event.preventDefault()\n    };\n\n    addQuestionHandler = event => {\n        event.preventDefault();\n\n        const quiz = this.state.quiz.concat();\n        const index = quiz.length + 1;\n\n        const {question, option1, option2, option3, option4} = this.state.formControls;\n\n        const questionItem = {\n            question: question.value,\n            id: index,\n            rightAnswerId: this.state.rightAnswerId,\n            answers: [\n                {text: option1.value, id: option1.id},\n                {text: option2.value, id: option2.id},\n                {text: option3.value, id: option3.id},\n                {text: option4.value, id: option4.id}\n            ]\n        };\n\n        quiz.push(questionItem);\n\n        this.setState({\n            quiz,\n            isFormValid: false,\n            rightAnswerId: 1,\n            formControls: createFormControls()\n        })\n    };\n\n    createQuizHandler = async event => {\n        event.preventDefault();\n\n        try {\n            await axios.post('/quizes.json', this.state.quiz);\n\n            this.setState({\n                quiz: [],\n                isFormValid: false,\n                rightAnswerId: 1,\n                formControls: createFormControls()\n            })\n\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    changeHandler = (value, controlName) => {\n        const formControls = {...this.state.formControls};\n        const control = {...formControls[controlName]};\n\n        control.touched = true;\n        control.value = value;\n        control.valid = validate(control.value, control.validation);\n\n        formControls[controlName] = control;\n\n        this.setState({\n            formControls,\n            isFormValid: validateForm(formControls)\n        })\n    };\n\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName];\n\n            return (\n                <Auxiliary key={controlName + index}>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMessage={control.errorMessage}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr/> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    selectChangeHandler = event => {\n        this.setState({\n            rightAnswerId: +event.target.value\n        })\n    };\n\n    render() {\n\n        const select = <Select\n            label='Выберите правильный ответ'\n            value={this.state.rightAnswerId}\n            onChange={this.selectChangeHandler}\n            options={[\n                {text: 1, value: 1},\n                {text: 2, value: 2},\n                {text: 3, value: 3},\n                {text: 4, value: 4}\n            ]}\n        />;\n\n        return (\n            <div className={classes.QuizCreator}>\n                <div>\n                    <h1>Создание теста</h1>\n\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n                        {select}\n\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                            disabled={!this.state.isFormValid}\n                        >\n                            Добавить вопрос\n                        </Button>\n\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                            disabled={this.state.quiz.length === 0}\n                        >\n                            Создать тест\n                        </Button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport {Route, Switch} from 'react-router-dom'\nimport Quiz from \"./containers/Quiz/Quiz\"\nimport QuizList from \"./containers/QuizList/QuizList\"\nimport Auth from \"./containers/Auth/Auth\"\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\"\n\nclass App extends Component {\n    render() {\n        return (\n            <Layout>\n                <Switch>\n                    <Route path=\"/auth\" component={Auth}/>\n                    <Route path=\"/quiz-creator\" component={QuizCreator}/>\n                    <Route path=\"/quiz/:id\" component={Quiz}/>\n                    <Route path=\"/\" component={QuizList}/>\n                </Switch>\n            </Layout>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\n\nexport default combineReducers({\n\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}